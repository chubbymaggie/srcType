#ifndef TYPEDICTHPP
#define TYPEDICTHPP
static const std::string hppfile =
"\n#include <unordered_map>"
"\n#include <string>\n"
"struct NameProfile;"
"struct FunctionProfile;"
"typedef std::unordered_map<std::string, NameProfile> VarTypeMap;"
"typedef std::unordered_map<std::string, FunctionProfile> FunctionVarMap;"
"struct NameProfile{"
    "NameProfile(std::string s1,std::string s2, std::string s3, std::string s4, std::string s5, std::string s6){"
""
    "}"
    "int linenumber;"
    "short int category;"
    "std::string type;"
    "std::string name;"
    "std::string namespacename;"
    "bool classMember;"
    "void clear(){"
      "linenumber = 0;"
      "category = 0;"
      "type.clear();"
      "name.clear();"
      "namespacename.clear();"
      "classMember = false;"
    "}"
"};"
"struct FunctionProfile{"
    "std::string name;"
    "std::string fnNamespace;"
    "std::string returnType;"
    "std::string returnTypeNamespace;"
    "VarTypeMap vtMap;"
    "FunctionProfile(std::string s1,std::string s2, std::string s3, std::string s4, VarTypeMap vtm){"
""
    "}"
    "void clear(){"
      "returnType.clear();"
      "name.clear();"
      "fnNamespace.clear();"
      "returnTypeNamespace.clear();"
      "vtMap.clear();"
    "}"
"};"
"struct TypeDictionary{"
  "FunctionVarMap fvMap;"
"};"
"\n"
#endif